

CREATE TABLE SimilarSequencesresidual (
 QUERY_ID                 VARCHAR(60),
 SUBJECT_ID               VARCHAR(60),
 QUERY_TAXON_ID           VARCHAR(40),
 SUBJECT_TAXON_ID         VARCHAR(40),
 EVALUE_MANT              FLOAT,
 EVALUE_EXP               INT,
 PERCENT_IDENTITY         FLOAT,
 PERCENT_MATCH            FLOAT
)  NOLOGGING 


CREATE INDEX ss_qtaxexp_ixresidual
ON SimilarSequencesresidual(query_id, subject_taxon_id,
evalue_exp, evalue_mant,
query_taxon_id, subject_id)  NOLOGGING   TABLESPACE indx


CREATE INDEX ss_seqs_ixresidual
ON SimilarSequencesresidual(query_id, subject_id,
evalue_exp, evalue_mant, percent_match)  NOLOGGING   TABLESPACE indx


CREATE TABLE InParalogresidual (
 SEQUENCE_ID_A           VARCHAR(60),
 SEQUENCE_ID_B           VARCHAR(60),
 TAXON_ID                VARCHAR(40),
 UNNORMALIZED_SCORE      FLOAT,
 NORMALIZED_SCORE        FLOAT
)


CREATE INDEX inparalog_seqa_ixresidual
ON InParalogresidual(sequence_id_a)  NOLOGGING   TABLESPACE indx


CREATE INDEX inparalog_seqb_ixresidual
ON InParalogresidual(sequence_id_b)  NOLOGGING   TABLESPACE indx

 
CREATE TABLE Orthologresidual (
 SEQUENCE_ID_A           VARCHAR(60),
 SEQUENCE_ID_B           VARCHAR(60),
 TAXON_ID_A              VARCHAR(40),
 TAXON_ID_B              VARCHAR(40),
 UNNORMALIZED_SCORE      FLOAT,
 NORMALIZED_SCORE        FLOAT
)


CREATE INDEX ortholog_seq_a_ixresidual
ON Orthologresidual(sequence_id_a)  NOLOGGING   TABLESPACE indx


CREATE INDEX ortholog_seq_b_ixresidual
ON Orthologresidual (sequence_id_b)  NOLOGGING   TABLESPACE indx


CREATE TABLE CoOrthologresidual (
 SEQUENCE_ID_A           VARCHAR(60),
 SEQUENCE_ID_B           VARCHAR(60),
 TAXON_ID_A              VARCHAR(40),
 TAXON_ID_B              VARCHAR(40),
 UNNORMALIZED_SCORE      FLOAT,
 NORMALIZED_SCORE        FLOAT
)


CREATE INDEX coortholog_seq_a_ixresidual
ON CoOrthologresidual(sequence_id_a)  NOLOGGING   TABLESPACE indx


CREATE INDEX coortholog_seq_b_ixresidual
ON CoOrthologresidual (sequence_id_b)  NOLOGGING   TABLESPACE indx


CREATE OR REPLACE VIEW InterTaxonMatchresidual
	AS SELECT ss.query_id, ss.subject_id, ss.subject_taxon_id,
	ss.evalue_mant, ss.evalue_exp
	FROM SimilarSequencesresidual ss
	WHERE ss.subject_taxon_id != ss.query_taxon_id

                                                                                                                           CREATE TABLE apidb.OrthologGroupLayoutresidual (
  ortholog_group_id NUMBER(12) NOT NULL,
  layout            CLOB,
  CONSTRAINT OrthologGroupLayout_pkey_residual PRIMARY KEY (ortholog_group_id),
  CONSTRAINT OrthologGroupLayout_fk01_residual FOREIGN KEY (ortholog_group_id)
      REFERENCES apidb.OrthologGroup (ortholog_group_id)
)                                                                                                                                      

                                                                                                                               GRANT INSERT, SELECT, UPDATE, DELETE ON apidb.OrthologGroupLayoutresidual TO GUS_W  

                                                                                                                           
GRANT SELECT ON apidb.OrthologGroupLayoutresidual TO GUS_R 


CREATE TABLE apidb.SimilarSequencesGroupresidual (
  ortholog_group_id NUMBER(12) NOT NULL,
  query_id VARCHAR(60) NOT NULL,
  query_core_peripheral VARCHAR(1),
  subject_id VARCHAR(60) NOT NULL,
  subject_core_peripheral VARCHAR(1),
  evalue_mant FLOAT,
  evalue_exp NUMBER,
  CONSTRAINT SimilarSequencesGroup_pk_residual PRIMARY KEY (ortholog_group_id, query_id, subject_id),
  CONSTRAINT SimilarSequencesGroup_fk01_residual FOREIGN KEY (ortholog_group_id)
      REFERENCES apidb.OrthologGroup (ortholog_group_id)
)


CREATE INDEX apidb.SimilarSequencesGroup_ix01_residual ON apidb.SimilarSequencesGroupresidual (ortholog_group_id)


GRANT INSERT, SELECT, UPDATE, DELETE ON apidb.SimilarSequencesGroupresidual TO GUS_W


GRANT SELECT ON apidb.SimilarSequencesGroupresidual TO GUS_R
