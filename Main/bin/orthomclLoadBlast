#!/usr/bin/perl

use strict;
use DBI;

usage() unless (@ARGV >= 2);

my $configFile = $ARGV[0];
my $config = parseConfigFile($configFile);

my $blastFile = $ARGV[1];

my $sqlLog = $ARGV[2];
 if ($sqlLog) {
 open (LOGFILE, ">$sqlLog");
 }

my $dbLogin = getConfig("dbLogin");
my $dbPassword = getConfig("dbPassword");
my $sst = getConfig("similarSequencesTable");
my $dbVendor = getConfig("dbVendor");

my $dbString = getConfig("dbConnectString");
my @database = split(/:/, $dbString);
my $dbInstance = $database[2];

my $dbh = DBI->connect($dbString, $dbLogin,$dbPassword)
                        or die DBI::errstr
                           unless $dbVendor eq 'oracle';

if ($dbVendor eq 'mysql') {
  require DBD::mysql;
  loadBlastMySQL($blastFile);
}
  elsif ($dbVendor eq 'oracle') {
       loadBlastOracle($dbLogin,$dbPassword,$blastFile);
   }



sub loadBlastMySQL {
 my $sql = "
 LOAD DATA
 LOCAL INFILE \"$blastFile\"
 REPLACE INTO TABLE $dbInstance.$sst
 FIELDS TERMINATED BY '\\t'
";
  runSql($sql);
}


sub loadBlastOracle {
  my $dbLogin=$_[0];
  my $dbPassword=$_[1];
  my $blastFile=$_[2];
  my $blastResults = do { local( @ARGV, $/ ) = $blastFile ; <> } ;
  my $sqlHeader = "
LOAD DATA
INFILE *
INTO TABLE $dbLogin.$sst
FIELDS TERMINATED BY \"\\t \" OPTIONALLY ENCLOSED BY '\"'
TRAILING NULLCOLS
(  query_id,
    subject_id,
    query_taxon_id,
    subject_taxon_id,
    evalue_mant,
    evalue_exp,
    percent_identity,
    percent_match
)
BEGINDATA
";
  open (PARFILE, ">orthomclPar.tmp");
  print PARFILE "userid=$dbLogin/$dbPassword\@$dbInstance"; 
  close PARFILE;
  
  open (CTLFILE, ">orthomclCtl.tmp");
  print CTLFILE $sqlHeader;
  print CTLFILE $blastResults;
  close CTLFILE;

  my $command=`sqlldr parfile=orthomclPar.tmp control=orthmclCtl.tmp`;
}


sub parseConfigFile {
  my ($configFile) = @_;

  open(F, $configFile) || die "Can't open config file '$configFile'\n";

  my $config;
  while(<F>) {
    chomp;
    s/\s+$//;
    next if /^\#/;
    /^(\w+)\=(.+)/ || die "illegal line in config file '$_'\n";
    my $key=$1;
    my $val=$2;
    $config->{$key} = $val;
    $val = '********' if $key eq 'dbPassword';
    #print STDERR localtime() . " configuration: $key=$val\n";
  }
  return $config;
}


sub getConfig {
  my ($prop) = @_;
  die "can't find property $prop in config file" unless $config->{$prop};
  return $config->{$prop};
}


sub runSql {
 my $sql = $_[0];
 if ($sqlLog) {
     logSql($sql);
    }
  my $stmt = $dbh->prepare($sql) or die DBI::errstr;
      $stmt->execute() or die DBI::errstr;
}

sub logSql {
  my $sql = $_[0];
  print LOGFILE "\n$sql";
}


sub usage {
 print "
Load Blast results into an Oracle or Mysql database.

usage: orthomclBulkLoad config_file blast_file

where:
  config_file : see below
  blast_file : blast output from orthoclParseBlast 

EXAMPLE: ./orthomclLoadBlast orthoConfig.txt blast_results_file.txt

NOTE: the database login in the config file must have update/insert/truncate privileges on the tables specified in the config file.

Sample Config File:

dbVendor=oracle  (or mysql)
dbConnectString=dbi:Oracle:orthomcl
dbLogin=my_db_login
dbPassword=my_db_password
mysqlDatabase=my_mysql_database
similarSequencesTable=SimilarSequences
orthologTable=Ortholog
inParalogTable=InParalog
coOrthologTable=CoOrtholog
interTaxonMatchView=InterTaxonMatch
percentMatchCutoff=50
evalueExponentCutoff=-5
";
}
if ($sqlLog) {
close LOGFILE;
}
close BLASTFILE;


