#!/usr/bin/perl
use strict;
my $allGroups = $ARGV[0];
my $diffGroups = $ARGV[1];

usage() unless scalar(@ARGV) == 2;

my %tier1Clades = (1485=>1,   5500=>1,  5758=>1,  629=>1, 1763=>1,   5658=>1,  5806=>1,  5873=>1, 780=>1,   32008=>1,  5690=>1,  5820=>1, 6033=>1, 5206=>1,   5740=>1,  6237=>1);

open(ALL, $allGroups) || die "cant open $allGroups\n";
my $count;
my $repCount;
my %protein2clade;
while(<ALL>) {
  chomp;
  my @a = split(/ /);
  my $id = shift @a;
  my %clades;
  my $isMerged;
  my @c;
  my $containsRep;
  foreach my $member (@a) {
      my @b = split(/\|/, $member);
      $protein2clade{"$b[1]|$b[2]"} = $b[0];
      push(@c, "$b[1]|$b[2]");
      $containsRep = 1 if $tier1Clades{$b[0]};
      $isMerged  = 1 if $clades{$b[0]};
      $clades{$b[0]} = 1 if $tier1Clades{$b[0]};
  }
  $count++ if $isMerged;
  $repCount++ if $containsRep;
  print join(" ", $id, @c) . "\n" if $isMerged;
}
close(ALL);
print "All: merged: $count  containsRep: $repCount\n";

open(DIFF, $diffGroups) || die "cant open $diffGroups\n";
$count = 0;
$repCount = 0;
while(<DIFF>) {
  chomp;
  my @a = split(/ /);
  shift @a;
  my %clades;
  my $isMerged;
  my $containsRep;
  foreach my $member (@a) {
      my $clade = $protein2clade{$member};
      $isMerged = $clades{$clade};
      $containsRep = 1 if $tier1Clades{$clade};
      $clades{$clade} = 1  if $tier1Clades{$clade};
  }
  $repCount++ if $containsRep;
  $count++ if $isMerged;
}
close(DIFF);
print "Diff: merged: $count  containsRep: $repCount\n";

sub usage {
  die "

Count the number of Tier 2 groups that include more than one Tier 1 representative proteins.

Provide counts for all groups and those that differ from a reference build.

Usage: orthomclCountMergedTier1
";

}
