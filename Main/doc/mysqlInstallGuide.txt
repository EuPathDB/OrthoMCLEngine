THIS FILE IS UNDER CONSTRUCTION.  please mail stevef@pcbi.upenn.edu with questions....


----INSTALLATION OVERVIEW---------------------------

I.	General Requirements
II.	Installing from OS Specific Packages
III.	Installing from General Linux/Unix Binary Packages
IV.	Creating a Database and User Account
V.	Optimizing MySQL
VI.     Troubleshooting Installation Issues
VII.    Removing Your MySQL Installation
----------------------------------------------------
----------------------------------------------------
I. General Requirements  

    -  MySQL server 5.1 or greater
    -  MySQL DBI driver module for PERL (available at CPAN)
    -  Unix/Linux or MacOS 10.0.1 or greater

----------------------------------------------------
----------------------------------------------------
II. Installing MySQL from OS Specific Packages (Root access required)

MySQL has pre-packaged installation suites for many operating systems (RPM, Solaris or MacOS pkg, etc). To determine if packages have been created for your operating system
  - Go to http://www.mysql.com/downloads
  - Click on "Download" under MySQL Community Server

If packages exist specific to your operating system, these packages provide the quickest method of installing the MySQL server, but please note that the installation directory for MySQL will vary from OS to OS, and you may find necessary to specify another directory when installing the package as default directory installations often require administrator privileges. Refer to the documentation for your operating system for instructions regarding OS specific package installation.

----------------------------------------------------
----------------------------------------------------
III. Installing MySQL From Linux/Unix Binary Packages (Root access not required)

- If you do not wish to use OS packages, or you need to install MySQL from a normal user account,      
  you can install MySQL using the following steps:


   1. Go to  http://www.mysql.com/downloads/
       - click on "Download" under MySQL Community Server
       - for linux: click on "Linux (non RPM packages)"
       - otherwise, find the .tar package for your OS
       - choose the download for your platform
          - use the 'uname -a' command if you don't know your platform 
       - either login/register or click "No thanks, just take me to the downloads!"
       - choose a mirror near you, and download

   2. Create a directory for your installation, and move the file to it.


   3. Unzip the downloaded file into the directory:
  
		tar -xzvf mysql-standard-5.1.34-linux-i686-glibc23.tar.gz
                rm mysql-standard-5.1.34-linux-i686-glibc23.tar.gz   (to save disk space)

   4. A subdirectory will be created with the full name of the MySQL version. For simplicity, create a  
      symbolic link to the mysql directory:

	 	ln -s mysql-standard-5.1.34-linux-i686-glibc23 mysql

   5. Change to the mysql directory and set up the default MySQL databases.
      Make sure to specify the mysql base install directory and data directory:

	        cd mysql
                ./scripts/mysql_install_db --basedir=/home/accountname/mysql --datadir=/home/accountname/mysql/data
    
        NOTE: The script will most likely inform that you that need to set a root password. 
              Don't worry about this for now; you will perform this task in another step.

   6. Move or copy to your home directory the included mysql.cnf file. Edit this
      file to reflect youri the path to your mysql installation, or create your own with 
      a text editor using our included file as a guide. This file is necessary to specify 
      the correct mysql directories upon startup, and to optimize server settings.

      Please we aware of the importance of the MySQL data directory! This
      directory is essential and resides in the MySQL home directory by default. It 
      houses the MySQL core databases, as well as the database(s) that you create, 
      thus it is very possible that this directory will be quite large in
      size. Please take this under consideration, and if the volume on which your
      data directory currently resides is small, you should copy or move your mysql/data
      directory to a volume with sufficient capacity. Make sure you specify the path to 
      this relocated directory via the "datadir" parameter in your mysql.cnf
      file.

   7. You are now ready to start your MySQL server as a background process. To do so, from within the mysql 
      directory base install, run:

           ./bin/mysqld_safe --defaults-file=~/mysql.cnf &
        
         NOTE: You *must* run this command from the mysql directory.
               You should see something similar to the following:

 		[1] 67786% Starting mysqld daemon with databases from home/youraccountname/mysql/data

   8. At this point your MySQL password is still blank. Use the following command to set a new                     
      root password:

		./bin/mysqladmin -u root password "yourpasswordhere"

--------------------------------------------------
--------------------------------------------------
IV. Create a New Database and User Account

   1. Log in to your mysql server as root. If you are logging in to an existing MySQL server, 
      use any existing account that can create a user and grant privileges: 

		./bin/mysql -u root -p

      Enter the password you set in Step 7 when prompted.

   2. Once logged in as root, create the database and user (schema) that you will use for OrthoMCL
      (we use orthomcl as an example here), and grant the user account the necessary privileges:
 
              mysql> CREATE DATABASE orthomcl;
	
	      mysql> GRANT SELECT,INSERT,UPDATE,DELETE,CREATE VIEW,CREATE, INDEX, DROP on orthomcl.* TO orthomcl@localhost;
	
 	      mysql> set password for orthomcl@localhost = password('yourpassword');

-------------------------------------------------
-------------------------------------------------
V. MySQL Server Optimization

   - Due to the potential volume of data in your blast results, you may find that it
     substantially boosts overall performance of the OrthoMCL suite to increase 
     the system resources available to MySQL. This can be achieved by specifying 
     MySQL runtime environment variables in your mysql.cnf file. In particular, 
     you may want to change the values of myisam_max_sort_file_size, mysiam_sort_buffer_size, 
     and read_buffer_size variables.

         -To view the values associated with these variables, log in to
            mysql as root as described in Step 1 of Section IV, and
            type:
          
                 mysql> show variables LIKE 'myisam_max_sort_file_size';
               
                 mysql> show variables LIKE 'myisam_sort_buffer_size';

                 mysql> show variables LIKE 'read_buffer_size';     

         
          NOTE: These values will display in bytes, i.e. a value of
                2147479552 for read_buffer_size is equivalent to 2 Gigabytes.

    
   -  As a frame of reference, our test lab settings are displayed below:

                myisam_max_sort_file_size=4G
                
                myisam_sort_buffer_size=200G

                read_buffer_size=2G

      
      Sizes are expressed in Gigabytes. Using these settings, our bulk load of 
      a 19GB blast file (orthomclLoadBlast) took 2.5 hours on a Dual Core
      2.4Ghz machine with 8G of RAM running Red Hat Linux. 





 TODO: ADD TROUBLESHOOTING SECTION     

          
	    

		
 




