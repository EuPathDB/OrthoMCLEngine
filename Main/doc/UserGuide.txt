OrthoMCL User's Guide
Version ??

=========== Introduction ==========================

Please read the OrthoMCL Algorithm document available here: http://docs.google.com/Doc?id=dd996jxg_1gsqsp6

The input to OrthoMCL is a set of proteomes.

The output is a set of files:
  pairs/
     orthologs.txt
     coorthologs.txt
     inparalogs.txt
  groups.txt

The files in the pairs/ directory contain the pairwise relationships between proteins, and their scores.  They are categorized into orthologs, co-orthologs and inparalogs as described in the OrthoMCL Algorithm document.  The groups.txt file contains the groups created by clustering the pairs with the MCL program.

There are three overall stages:
  - all-v-all BLAST
  - the OrthoMCL Pairs program -- makes the pairs/ directory
  - the MCL program -- clusters the pairs to make the groups.txt file

These stages are executed in a series of thirteen steps detailed below.  Most simply involve running a provided program.  They are broken into steps for ease of backtracking and recoverability.

========= Requirements ==========

(1) UNIX
  - The OrthoMCL Pairs program has only been tested on UNIX
  - The MCL program is only UNIX compatible

(2) BLAST
  - we recommend NCBI BLAST for two reasons
     a) theoretically: XXXXXXX
     b) practically: NCBI BLAST provides a tab delimited output which provide parsers for.  See Step 7 below.
  - for large datasets (e.g. 1M proteins) all-v-all BLAST will likely require a compute cluster. Otherwise, they could run for months. 

(3) Relational Database 
  - The OrthoMCL Pairs algorithm runs in a relational database.  Supported vendors are:
    - Oracle
    - MySql
  - If you don't already have one of these installed, you will need to install MySql which should be doable without significant systems administration support.

(4) Perl
  - standard perl
  - DBI libraries

(5) MCL program
  - more details here...

(6) Time
  - As a benchmark, OrthoMCL-DB Version 3 had:
     - 100 genomes (eukaryotes and prokaryotes)
     - 1M protein sequences
     - 500M significant pairwise BLAST matches
  - This set took XXXX days to run all-v-all BLAST on a 200 node compute cluster.  The processing to find pairs took XXXX hours on a XXXX machine and the processing to find groups took XXXX hours.


=========== Overview of steps =======================

There are the thirteen steps.  Most are trivial to run, so don't be discouraged.

All programs except mysql and mcl are provided as part of the OrthoMCL download.  The provided programs all begin with 'orthomcl' and will print help if called with no arguments.

(1) install or get access to a supported relational database.  If using MySql, a specific installation configuration is required, so it may require installing your own MySql, which is straightforward.

(2) install and configure the OrthoMCL suite of programs.  (This is easy.)

(3) run orthomclInstallSchema to install the required schema into the database

(4) download and install the mcl program according to provided instructions.

(5) run orthomclAdjustFasta (or your own simple script) to generate protein fasta files in the required format

(6) run orthomclFilterFasta to filter poor quality proteins, and optionally remove alternative proteins. Creates a single large goodProteins.fasta file (and a rejectProteins.fasta file)

(7) run all-v-all NCBI BLAST on goodProteins.fasta (output format is tab delimited text).  This step is entirely your responsibility.

(8) run orthomclBlastParser on NCBI BLAST tab output to create file of similarities in required format

(9) run orthomclLoadBlast to bulk load the output of orthomclBlastParser into the SimilarSequences table.

(10) run the orthomclPairs program to compute pairwise relationships.  (This is the core computational program)

(11) run the orthomclDumpPairsFiles program to dump the pairs/ directory from the database

(12) run the mcl program on the mcl_input.txt file created in Step 11.

(13) run orthomclMclToGroups to convert mcl output to groups.txt

We recommend you save the output of each step so that you can easily redo stuff if things go wrong.


========== Step 1: MySql ============


========== Step 2: install OrthoMCL programs  ========


========== Step 3: install schema ========


========== Step 4: install mcl ==========


========== Step 5: orthomclAdjustFasta ==========
Input: 
  - fasta files as acquired from the genome resource.
Output:
  - a directory of orthomcl-compatible fasta files

This step prepares a set of protein fasta files required by the next step.  There are three requirements for that step:
  1) a directory which contains all and only the proteome .fasta files
  1) each .fasta file must have a name in the form 'xxxx.fasta' where xxxx is a three or four letter unique taxon code.  For example: hsa.fasta or eco.fasta
  2) each protein in those files must have a definition line in the following format:
     >xxxx|yyyyyyyy
     where xxxx is the three or four letter taxon code and yyyyyyy is a sequence identifier unique within that taxon.

Use the orthomclAdjustFasta for this step if your input fasta files are in GenBank style (ie, the first word on the definition line is the unique sequence indentifier).

If your input fasta files are not in GenBank style, write a simple script to produce orthomcl-compatible fasta files.


======== Step 6: orthomclFilterFasta ===========
Input: 
  - a directory of orthomcl-compatible fasta files
  - optionally a gene->protein mapping file
Output:
  - goodProteins.fasta
  - rejectProteins.fasta
  - a report of suspicious proteomes (> 10% rejects)

Use the orthomclFilterFasta program for this step. It should run in a few minutes
 

========= Step 7: All-v-all BLAST =========
Input:
  - goodProteins.fasta
Output:
  - your_blast_results_in_tab_format

You must run your own BLAST.  For large datasets you should consider gaining access to a compute cluster.  (For 1 million sequences we ran on a 200 node cluster and it took XXXX days).

We expect you to:
  - use NCBI BLAST (XXXX reasons....)
  - run with the -m 8 option to provide tab delimited output required by Step 8
  - see the OrthoMCL Algorithm document for important details about other BLAST arguments

If you are a power user you can deviate from this, so long as you can ultimately provide output in exactly the format provided by NCBI BLAST using the -m 8 option, and expected by Step 8.

If you are a super-power user you can deviate from that, and also skip Step 8.   But you must be able to provide the exact format file created by that step as expected by Step 9.  The tricky part is computing percent match.  


========= Step 8: orthomclBlastParser ========
Input:
  - your_blast_results_in_tab_format
Output:
  - similarSequences.txt

This step parses NCBI BLAST -m 8 output into the format that can be loaded into the orthomcl database. 

Use the orthomclBlastParser for this.  It will run in XXXXX.  In addition to formatting, it computes the percent match of each hit, which is tricky (see the perl code if you are a super-power user.)


========= Step 9: orthomclLoadBlast  ===========
Input:
  - similarSequences.txt
Output:
  - a loaded SimilarSequences table in the database

This step loads the BLAST results into the orthomcl database. 

Use the orthomclLoadBlast program for this.  It may take many hours to run (15 hours for 500M similarities).


========= Step 10: orthomclPairs =========

This is the computationally major step that finds protein pairs.  It executes the OrthoMCL Algorithm using the relational database.  

